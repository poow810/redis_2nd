dependencies {
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation 'org.springframework.boot:spring-boot-starter'

    // cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine'
    implementation 'org.redisson:redisson-spring-boot-starter:3.45.1'

    // querydsl
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation project(':domain')
}

def generatedDir = file("src/main/generated")

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = generatedDir
}

sourceSets {
    main {
        java {
            srcDirs += generatedDir
        }
    }
}

clean {
    delete file('src/main/generated')
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}